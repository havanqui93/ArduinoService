@using ArduinoService.Resource
@{
    ViewBag.Title = "Control Systems ioT";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<style>
    .x_title h2 {
        width: 150px;
    }
</style>

<div class="col-sm-12">
    <section class="content-header">
        <ol class="breadcrumb"></ol>
    </section>
</div>


<div class="container">
    @{
        for (int i = 0; i < 4; i++)
        {
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div class="x_panel tile fixed_height_425">
                    <div class="x_title">
                        <h2>Title</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li>
                                <a class="edit-garden"><i class="fa fa-pencil"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="h-content">
                            <div class="col-sm-6 h-item-left">
                                30C
                            </div>
                            <div class="col-sm-6 h-item-right">
                                <span class="glyphicon glyphicon-cloud"></span>
                            </div>
                        </div>
                        <div class="b-content">
                            @for (int j = 0; j < 10; j++)
                            {
                                <div class="col-sm-12 item-content">
                                    <div class="left-item col-sm-6">2016/10/10 05:30</div>
                                    <div class="right-item col-sm-6">10C</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }


</div>

<div id="add-tracking">
    <span class="fa fa-plus"></span>
</div>

<div class="modal fade" id="ModalAddTracking" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Thêm thiết bị</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="text" class="form-control" id="addtext-device" maxlength="100">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="fa fa-ban"></span>Close</button>
                <button type="button" id="btn-addtracking" class="btn btn-primary"><span class="fa fa-check"></span>OK</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.TrackingData;
            // Create a function that the hub can call back to display messages.
            chat.client.SendClient = function (data) {
                var object = JSON.parse(data);

                // Update list data by ajax
                GetlistTrackingHistory();

                // Update view
                $('#temperature span').text(object[0].TEMPERATURE + "℃");
                $('#humidity span').text(object[0].HUMIDITY + "%");
                $('#moisture span').text(object[0].MOISTURE + "%");
            };
        });

        $.connection.hub.start().done(function () {
            // Get list data
            GetlistTrackingHistory();
        });

        function GetlistTrackingHistory() {
            $.ajax({
                method: "POST",
                async: true,
                url: "/Home/GetListTrackingHistory",
                dataType: "JSON"
            }).success(function (msg) {
                if (msg != "") {
                    // Update list history
                    var html = "";
                    $.each(msg, function (index, value) {
                        html += "<tr><td>" + value.Time + "</td><td>" + value.TEMPERATURE + "℃</td><td>" + value.HUMIDITY + "%</td><td>" + value.MOISTURE + "%</td></tr>";
                    });
                    $("#table-history tbody").hide('slow').html(html).show('slow');

                    // set current temperature
                    $('#temperature span').slideUp(100).text(msg[0].TEMPERATURE + "℃").slideDown(100);
                    $('#humidity span').slideUp(100).text(msg[0].HUMIDITY + "%").slideDown(100);
                    $('#moisture span').slideUp(100).text(msg[0].MOISTURE + "%").slideDown(100);

                }
            });
        }


    </script>
}
